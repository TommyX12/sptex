SP DOCUMENT('11pt')

SP PACKAGES
    amsmath
    
SP DEF f(n):
    if n <= 0:
        return 1
    
    return n * f(n - 1)

SP DEF P(n, k):
    return f(n) // f(n - k)

SP DEF C(n, k):
    return f(n) // (f(k) * f(n - k))

SP DEF Bin(x, n, p):
    return C(n, x) * p**x * (1 - p)**(n - x)

SP DEF BinE(n, p):
    return n * p

SP DEF NBin(x, r, p):
    return C(x + r - 1, r - 1) * p**r * (1 - p)**x

SP DEF Poisson(x, l):
    return math.exp(-l) * l**x / f(x)

SP SPDEF TEST(a = 5, b = 5):
    lines = SP_UPPER().run(lines)
    lines.append('a = %d, b = %d' % (a, b))
    return lines
    
SP BODY
    SP TEST
        a
        b
        c
    
    Given that the average customers per hour is 4,
    
    SP EX
        for i in range(1, 5):
            put_line('The probability that {} customer{} comes within the next hour is {:.6f}.'.format(i, 's' if i > 1 else '', Poisson(i, 4)))
            put_line('')
    
    SP LIST
        - 2 + 2 = SP(2 + 2)
        - awet
        - safda
        - sdf
    
    SP LIST(ordered = True)
        - SP('3 + 3') = SP(eval(ans))
        - asdf
        - safda
        - sdf
    
    SP EQU SP SC
        P(0 <= S <= 5/2) = integral 0 to 5/2 of 1/2 * {4s^2}/625 ds = 5
        SP() = PS
        1 + SP('+'.join(['1/' + str(2**i) for i in range(1, 5)])) + ... = 2
        1/2 * 1/2 * ... = 0 = 1 / inf
        sum i = 1 to 5 of i^2 = SP('+'.join([str(i) + '^2' for i in range(1, 6)]))
        = SP('+'.join([str(i**2) for i in range(1, 6)])) = SP(eval(ans))
        prod i = 1 to 5 of i = 5! = SP('1 * 2 * 3 * 4 * 5') = SP(eval(ans))
        SP('1/2 + 1/3 + 1/4') ~= SP('{:.5f}'.format(eval(ans)))
    
    SP TABLE |c||l|l|l|
        1 & 2 & 3 & 4
        5 & 6 & 7 & 8
        1 & 2 & 3 & 4
        5 & 6 & 7 & 8
    
    SP CODE
        def f(n):
            if n <= 0:
                return 1
            
            return n * f(n - 1)
